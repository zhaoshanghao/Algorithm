#include<opencv.hpp>#include"cv.h"   #include"highgui.h"   #include"stdio.h" #include "cxcore.h"  #include<windows.h>  // 实现将拍下来的图片缩放一倍   IplImage* DoPyrDown(IplImage* image, int filter = IPL_GAUSSIAN_5x5)  {      // 设置大小缩小一倍       CvSize size = cvSize(image->width / 2,image->height / 2);      //初始化图片       IplImage* outImage = cvCreateImage(size,image->depth,image->nChannels);  	    IplImage* outImage2 = cvCreateImage(size,image->depth,image->nChannels);  	       //实现缩放       cvPyrDown(image,outImage);  	 cvPyrDown(image,outImage2);  	     cvReleaseImage(&image);      return outImage;  }   int main(int argc, char** argv)  {      cvNamedWindow("vedio");      CvCapture* capture;       // 首先是要通过摄像设备来得到一个CvCapture对象       if(1 == argc)      {          capture = cvCreateCameraCapture(0);      }      else      {          capture = cvCreateCameraCapture(atoi(argv[1]));      }        assert(NULL != capture);        IplImage* frame;      char keyCode;       while((keyCode = cvWaitKey(20)))      {          //表示按下了ESC键，退出           if(keyCode == 27)          {              break;          }   if(keyCode == 13)        //表示按下了回车键，此时应当保存照片   while(1)	{ {            //初始化两张图片              IplImage* outImage = cvCreateImage(cvGetSize(frame),frame->depth,frame->nChannels); 			            IplImage* outImage2 = cvCreateImage(cvGetSize(frame),frame->depth,frame->nChannels);              // 将原图拷贝过来               cvCopy(frame,outImage,NULL);  		            //实现缩放操作               outImage = DoPyrDown(outImage);  	            //设置保存的图片名称和格式               char* outImageName = "666.bmp";			 cvSaveImage(outImageName,outImage);              cvReleaseImage(&outImage);  			Sleep(1000);			        frame = cvQueryFrame(capture); 					 cvCopy(frame,outImage2,NULL); 					             outImage2 = DoPyrDown(outImage2);            char* outImageName2 = "777.bmp";			 cvSaveImage(outImageName2,outImage2);              cvReleaseImage(&outImage2); 				printf("保存图片成功！");						 if(keyCode == 27)          {              break;          }  							    frame = cvQueryFrame(capture); 					 					   } 	}										// 得到摄像设备的下一帧图像           frame = cvQueryFrame(capture);  			 if(!frame)          {              break;          }  	       cvShowImage("vedio",frame);           	} 	cvReleaseImage(&frame);      cvDestroyAllWindows();      return 0;  	}   